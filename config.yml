ollama_model: gemma3:27b
model_tier: cheap
max_tokens: 600
use_confirmation: true
save_history: true
history_path: ~/.gcm_history.log
max_characters: 500

emojis:
  header: "🔀"
  add: "🆕"
  change: "📝"
  delete: "🗑️"
  info: "ℹ️"
  summary: "🎯"
  windows: "🪟"
  macos: "🍎"
  linux: "🐧"

prompt_template: |
  You are an expert software engineer and Git practitioner. Based on the following Git status summary, generate a clear and complete Git commit message with the following structure:

  1. A concise summary line using the Conventional Commits format (e.g., feat:, fix:, chore:, refactor:).
  2. A detailed short description paragraph explaining what was added, changed, or removed and why.
  3. Optionally, include an short explanation or rationale if it helps clarify the purpose of the changes.
  4. Use one short paragraph, but make sure the message is informative, useful, and make short. The total number of characters used in the three paragraphs doesn't exceed 300. Shorten your message to meet this limit.
  5. Do not use markdown, use plain text.

  Changes:
  {changes}

  Diff summary:
  {diff}